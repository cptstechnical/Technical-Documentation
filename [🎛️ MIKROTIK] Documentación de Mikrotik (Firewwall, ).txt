=========================================================================================================================
[âœ…TEORIA ENTENDIMIENTO]:

âœ… tipos de capas del modelo OSI y su funciÃ³n principa:
******************************************************************
+-------+----------------------+----------------------------------------+
| Capa  | Nombre               | FunciÃ³n                                |
+-------+----------------------+----------------------------------------+
| 7     | AplicaciÃ³n           | Interfaz usuario y aplicaciones        |
| 6     | PresentaciÃ³n         | Formato, cifrado y compresiÃ³n          |
| 5     | SesiÃ³n               | Control de diÃ¡logo y sesiones          |
| 4     | Transporte           | Transporte fiable y control de errores |
| 3     | Red                  | Enrutamiento y direccionamiento        |
| 2     | Enlace de Datos      | ComunicaciÃ³n nodo a nodo, MAC          |
| 1     | FÃ­sica               | TransmisiÃ³n de bits fÃ­sicos            |
+-------+----------------------+----------------------------------------+

âœ… protocolos principales de redes:
******************************************************************
+------------+-------------------------+---------------------------------------------------+
| Protocolo  | Capa OSI / TCP-IP       | FunciÃ³n                                           |
+------------+-------------------------+---------------------------------------------------+
| IP         | Capa 3 (Red)            | Encaminamiento y direccionamiento                 |
| ICMP       | Capa 3 (Red)            | Mensajes de control y error (ping, traceroute)    |
| TCP        | Capa 4 (Transporte)     | Transporte confiable, conexiÃ³n orientada          |
| UDP        | Capa 4 (Transporte)     | Transporte no confiable, sin conexiÃ³n             |
| ARP        | Capa 2/3 (Enlace/Red)   | ResoluciÃ³n de direcciones IP a MAC                |
| HTTP       | Capa 7 (AplicaciÃ³n)     | Protocolo web, transferencia de hipertexto        |
| HTTPS      | Capa 7 (AplicaciÃ³n)     | HTTP sobre TLS/SSL, comunicaciÃ³n segura           |
| FTP        | Capa 7 (AplicaciÃ³n)     | Transferencia de archivos                         |
| SMTP       | Capa 7 (AplicaciÃ³n)     | EnvÃ­o de correo electrÃ³nico                       |
| DNS        | Capa 7 (AplicaciÃ³n)     | ResoluciÃ³n de nombres de dominio                  |
| DHCP       | Capa 7 (AplicaciÃ³n)     | AsignaciÃ³n automÃ¡tica de IP                       |
| SSH        | Capa 7 (AplicaciÃ³n)     | Acceso remoto seguro                              |
| SNMP       | Capa 7 (AplicaciÃ³n)     | GestiÃ³n y monitorizaciÃ³n de dispositivos          |
| TLS/SSL    | Capa 6/7 (PresentaciÃ³n) | Cifrado y seguridad en comunicaciones             |
| RTP        | Capa 7 (AplicaciÃ³n)     | Transporte de datos en tiempo real (VoIP, video)  |
+------------+-------------------------+---------------------------------------------------+


âœ… puertos principales de redes:
******************************************************************
+--------+-----------+---------------------------+
| Puerto | Protocolo | Servicio comÃºn            |
+--------+-----------+---------------------------+
| 20     | TCP       | FTP data transfer         |
| 21     | TCP       | FTP control               |
| 22     | TCP       | SSH                       |
| 23     | TCP       | Telnet                    |
| 25     | TCP       | SMTP                      |
| 53     | TCP/UDP   | DNS                       |
| 67     | UDP       | DHCP server               |
| 68     | UDP       | DHCP client               |
| 80     | TCP       | HTTP                      |
| 110    | TCP       | POP3                      |
| 123    | UDP       | NTP                       |
| 143    | TCP       | IMAP                      |
| 161    | UDP       | SNMP                      |
| 194    | TCP       | IRC                       |
| 443    | TCP       | HTTPS                     |
| 445    | TCP       | SMB (Windows file share)  |
| 514    | UDP       | Syslog                    |
| 993    | TCP       | IMAPS                     |
| 995    | TCP       | POP3S                     |
| 1723   | TCP       | PPTP VPN                  |
| 3306   | TCP       | MySQL                     |
| 3389   | TCP       | RDP                       |
| 5060   | UDP/TCP   | SIP (VoIP signaling)      |
| 5432   | TCP       | PostgreSQL                |
| 5900   | TCP       | VNC                       |
| 8080   | TCP       | HTTP alternative / proxy  |
+--------+-----------+---------------------------+


=========================================================================================================================
[âœ… IP > Firewall]:

## sistema de input, output y forward

Cadena (Chain)             Â¿QuÃ© filtra?	                              Ejemplo de uso
-------------------------------------------------------------------------------------------------------------------------
input                      TrÃ¡fico destinado al router                Permitir SSH/Winbox/ICMP al router.
forward                    TrÃ¡fico que pasa a travÃ©s del router       Filtrar trÃ¡fico LAN â†’ WAN / WAN â†’ LAN.                    # no es para la mÃ¡quina local, sino que el firewall estÃ¡ actuando como router o puente, reenviando paquetes entre redes.
output                     TrÃ¡fico generado por el router             Controlar actualizaciones o pings del propio router
                                                                      -(se suele utilizar para bloquear actualizaciones).


âœ… Ejemplos rÃ¡pidos:
******************************************************************
âœ… 1. INPUT â†’ TrÃ¡fico AL router (servicios del router)
ðŸ“Œ Ejemplo 1: Permitir acceso SSH al router desde una IP concreta
ðŸ“Œ Ejemplo 2: Permitir Winbox desde red local
ðŸ’¡ðŸ“¡ Es el que utilizo para permitir servicios al mikrotik 

âœ… 2. FORWARD â†’ TrÃ¡fico que PASA a travÃ©s del router
ðŸ“Œ Ejemplo 1: Permitir que LAN navegue por Internet
ðŸ“Œ Ejemplo 2: Bloquear que LAN acceda a una IP especÃ­fica
ðŸ’¡ðŸ§± Es el que se utiliza como firewall de servicios en red 

âœ… 3. OUTPUT â†’ TrÃ¡fico generado POR el router
ðŸ“Œ Ejemplo 1: Bloquear que el router haga ping a Internet
ðŸ“Œ Ejemplo 2: Bloquear actualizaciones del router
ðŸ’¡ Es el menos utilizado, para permitir desde el mikrotik


âœ… ejemplo de uso:
******************************************************************
Usuario â†’ Router     # input
Router â†’ Usuario     # output
Red â†’ Router â†’ Red   # forward


âœ… acciones (targets) mÃ¡s comunes que puedes aplicar a las reglas:
******************************************************************
# mÃ¡s usadas:
accept:                     Permite el paquete (equivalente a ACCEPT).
drop:                       Descarta el paquete sin respuesta (equivalente a DROP).
reject:                     Bloquea y envÃ­a respuesta ICMP o TCP reset (equivalente a REJECT).

# otras opciones:
log:                        Registra el paquete en logs.
return:                     Sale de la regla o cadena actual.
passthrough:                Deja continuar evaluaciÃ³n en siguientes reglas (similar a RETURN en iptables).
nat (src-nat, dst-nat):     TraducciÃ³n de IP origen/destino (equivalente a SNAT/DNAT).
mark:                       Marca paquetes para procesamiento posterior (similar a QUEUE o mangle en iptables).


âœ… punto de inicio o destino del trÃ¡fico:
******************************************************************
src-address: IP de origen del paquete (desde dÃ³nde viene).
dst-address: IP de destino del paquete (a dÃ³nde va).
# las listas son enumeraciones varias de ips y se pueden crear desde menu â†’ IP â†’ Firewall â†’ Address Lists
src-address-list: Lista de direcciones IP origen predefinidas por mi.
dst-address-list: Lista de direcciones IP destino predefinidas por mi.
src-port: Puerto de origen del paquete (desde quÃ© puerto sale, Ãºtil para TCP/UDP).
dst-port: Puerto de destino del paquete (hacia quÃ© puerto se dirige, Ãºtil para TCP/UDP).
# tambiÃ©n se puede validar por interface, las interfaces se crean en menu â†’ interfaces
in-interface: Interfaz de entrada por la que llega el paquete (por dÃ³nde entra al router).
out-interface: Interfaz de salida por la que se envÃ­a el paquete (por dÃ³nde sale del router).


âœ… orden para agregar filas del firewall:
******************************************************************
# para agregar reglas del firewall se sigue el siguiente orde
#	- primero se acepta toda la red
#	- luego se van denegando los servicios, protocolos o redes que quiera aislar
# en el comentario, es preferible porner un titulo simple en mayÃºsculas de la referencia de la regla, para interpretarlas mÃ¡s rÃ¡pidamente

Un ejemplo con una vlan 53: 
-----------------------------------------------------------------------------------------------------
## no hace falta permitir el trÃ¡fico dentro de la misma vlan ya que no pasa por el router cuando se trata de la misma vlan, cada interface la tengo asignada en una vlan
## EJEMPLO - Permirimos todo el trÃ¡fico a un servidor
Chain:FORWARD   Src. Address:<IP-SERVIDOR> 	Action:ACCEPT 
## EJEMPLO - Permitimos gestion de los puertos necesarios de una lista de IT que enumera varias ips hacia la vlan
Chain:FORWARD 	Src. Address List:<LIST-IT> Protocol:TCP  Dst-Prot:53,80,5010  	Out. Interface:53 	Action:ACCEPT  
## EJEMPLO - Permitimos gestion de los puertos necesarios de una ip hacia la vlan
Chain:FORWARD 	Src Address:<IP-MANUEL> Protocol:TCP  Dst-Prot:53,80,5010  	Out. Interface:53 	Action:ACCEPT  
## EJEMPLO - Bloquear acceso desde otras vlanes hacia la vlan-53 con monitorizaciÃ³n de log
Chain:FORWARD 	In. Interface:[!]53 	Out. Interface:53 	Action:DROP 	Log[x]
-----------------------------------------------------------------------------------------------------


âœ… connection-state:
******************************************************************
# En MikroTik, connection-state clasifica el estado del paquete en relaciÃ³n con conexiones previas. 
new:			  Primer paquete de una nueva conexiÃ³n (ej.: primer SYN de TCP).
established:		  Paquete perteneciente a una conexiÃ³n ya aceptada y activa.
related:		  Nuevo flujo asociado a una conexiÃ³n existente (ej.: FTP, ICMP error).
invalid:		  Paquete que no pertenece a ninguna conexiÃ³n vÃ¡lida (puede ser corrupto).
untracked:		  Paquete no inspeccionado por el conntrack (tracking deshabilitado).



=========================================================================================================================
=========================================================================================================================
				 		- EJERCICIOS - 
=========================================================================================================================
=========================================================================================================================
[âœ… ConfiguraciÃ³n de Mikoritk]:
[ðŸ“Œ Ejercicio 1 Â· (red bÃ¡sica) conseguir internet]:

MMM      MMM       KKK                          TTTTTTTTTTT      KKK
MMMM    MMMM       KKK                          TTTTTTTTTTT      KKK
MMM MMMM MMM  III  KKK  KKK  RRRRRR     OOOOOO      TTT     III  KKK  KKK
MMM  MM  MMM  III  KKKKK     RRR  RRR  OOO  OOO     TTT     III  KKKKK
MMM      MMM  III  KKK KKK   RRRRRR    OOO  OOO     TTT     III  KKK KKK
MMM      MMM  III  KKK  KKK  RRR  RRR   OOOOOO      TTT     III  KKK  KKK

# resetear mikrotick
System - reset configuration - chequear las  siguientes opciones:
	- No default configuration
  - Do not buckup

# Instalar Ãºltima versiÃ³n 
System -> Packages -> Check For Updates  -> (Seleccionamos la estable) Download&Install

# explicaciÃ³n WAN/LAN
# Internet (89.345.34.22) <---- WAN ----> [MikroTik] <---- LAN ----> PC (192.168.1.23)

# -----Bridge-----
# Creo un bridge para enlazar todos los eth de salida porque son 3, para eso vamos a brige (+) y lo nombro bridge_LAN
# Luego vamos a la pestaÃ±a de (Ports) y asociamos los puertos eth salientes (LAN) con el bridge
[eth2, eth3 y eth4]

# ------interfefaces----- (bocas fÃ­sicos)
# se genera automÃ¡ticamente lo que vamos creando
# aquÃ­ veremos los puertos fisicos por ejemplo como tenemos 4 ether uno de entrada y tres de salida veremos los cuatro


# ------IP--------
Luego vamos a ip > address y agregamos en WAN la IP de entrada y en LAN la ip de salida (asociada al bridge, es decir, en LAN el bridge):
WAN :           ADDRESS >  192.168.0.220/24       NETWORK > 192.168.0.0        INTERFACE > WAN
bridge_LAN :    ADDRESS >  172.16.0.1/24          NETWORK > 172.16.0.0         INTERFACE > bridge_LAN


------DNS--------
# Esta DNS va a ser la del Mikrotik
Luego vamos a ip > DNS, para darle un DNS, cambiamos en el apartado de Servers la DNS como por ejemplo 8.8.8.8


# CONSEGUIR INTERNET: 
# *********************************
# -----NAT-----
Para conseguir NAT hay que configurar el NAT de la siguiente forma, vamos a IP > Firewall > (+)
En Chain la cambio a "srcnat", en out.interface le configuro la WAN que en mi caso es (ether1)
y en la casilla action lo cambio a "masquerade", una vez hechos los cambios lo guardo. 
-----------------------------------------------------------------------------------------------
# NAT masquerade (enmascarada) 
es una tÃ©cnica utilizada en redes de computadoras para permitir que mÃºltiples dispositivos en una red local compartan una Ãºnica direcciÃ³n IP pÃºblica para acceder a Internet.
-----------------------------------------------------------------------------------------------

# -----AGREGAR GATEWAY-----
Me dirijo a IP > Routes > (+). 
Una vez aqui la dist.address la dejo en 0.0.0.0/0
En el Gateway le configuro la puerta de enlace de la WAN (192.168.0.1)


[ðŸ“Œ Ejercicio 2 Â· configurar DHCP]:
# -------POOL------
# Primero configuro el Pool que sirve para poner un varemo de IPs con las que quiero trabajar: 
# Este varemo va a servir solo para asignar las IP dinÃ¡micas las IP estÃ¡ticas las vamos a poder coger fuera de ese varemo.
IP > Pool > (+)
le doy un nombre que en mi caso es > dhcp_pool()
y seleccionamos el baremo de IPs que en mi caso es (18 ips) > 172.16.0.2-172.16.0.20

# -------DHCP SERVER------
IP > DHCP Server > (+)
elegimos el bridge que hemos creado en el primer proyecto donde conectamos todas nuestras redes LAN: interface > bridge_LAN
como tengo todo bien configurado le doy a siguiente en todo excepto la parte del tiempo que la he cambiado a 10 en vez de a 30, (este va a ser el tiempo en el que va a refrescar la IP dinÃ¡mica)
y en Address Pool selecciono el Pool que he creado anteriormente > dhcp_pool()

+ rellenar la parte de network

# -------DHCP CLIENT------ -> (No hay que hacerlo si nuestro router esta configurado a otro porque la IP se asigna automÃ¡ticamente).
Como mi red sobre la que ya he trabajado recibo una IP automÃ¡ticamente de la red del trabajo de otro router, no es necesario agregar el DHCP client 
ya que es para recoger la IP principal de salida. Como de recoger esta seÃ±al se encarga otro router al que yo estoy conectado en DHCP client se deja en blanco.

En el caso de que tendrÃ­a que hacerlo: me dirijo a DHCP Client y le doy a (+), y agrego la interface de la WAN que en mi caso es la ethr1

# -------DNS-------
Vamos a DHCP Server -> Networks, y modificamos el DNS Server para modificar el DNS de las IP dinÃ¡micas 



