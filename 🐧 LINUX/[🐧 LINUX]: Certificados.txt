#=========================================================================================================================
[üêßINSTALAR CERTIFICADO - certificado autofirmado (self-signed certificate)]::
# certificado con dominio local
‚ö†Ô∏è Para un dominio local como el mio necesito un certificado autofirmado
‚ùå Esto crear√° en el certificado una x porque no puede comprobar que el certificado sea valido, porque puede ser suplantado

## .key :: (clave privada)
# Genero una clave privada
	cd /etc/letsencrypt/pruebas.local/
	openssl genpkey -algorithm RSA -out pruebas.local.key -aes256
	> **********

## .csr :: (Solicitud de firma de certificado)
# Genero un archivo de solicitud de firma de certificado (CSR)
# En un entorno real, una vez generado mi CSR desde mi servidor lo tengo que enviar a la empresa de venta de dominio (como Namecheap) o Autoridad Certificadora (CA) y ellos me lo validan y me devuelven un .crt
	cd /etc/letsencrypt/pruebas.local/
	openssl req -new -key pruebas.local.key -out pruebas.local.csr
	> **********

## .crt o .pfx o .pem :: (clave p√∫blica)
# Genero el certificado autofirmado con caducidad de 1 a√±o (solo lo genero en el caso que sean pruebas, los "certificados autofirmados" se hacen cuando el dominio no es real)
# En un entorno real, deber√≠a enviar la CSR a una Autoridad de Certificaci√≥n (CA) y utilizar el certificado que me proporcionar√≠an.
	cd /etc/letsencrypt/pruebas.local/
	openssl x509 -req -days 365 -in pruebas.local.csr -signkey pruebas.local.key -out pruebas.local.crt
	> **********

# En el caso de caducarse, en un entorno real, tengo que generar otro CSR y repitiendo el proceso con la Autoridad Certificadora (CA).

# -
# doy permisos 
sudo chown -R root:root /etc/letsencrypt/
sudo chmod 700 /etc/letsencrypt/pruebas.local
sudo chmod 600 /etc/letsencrypt/pruebas.local/pruebas.local.key
sudo chmod 644 /etc/letsencrypt/pruebas.local/pruebas.local.crt

# modifico el archivo para https de apache
vim  /etc/apache2/sites-available/default-ssl.conf
--------------------------------------------------------------------------------------
...
DocumentRoot /var/www/php

SSLEngine on
SSLCertificateFile /etc/letsencrypt/pruebas.local/pruebas.local.crt
SSLCertificateKeyFile /etc/letsencrypt/pruebas.local/pruebas.local.key
# con un certificado autofirmado no necesitas CSR porque no existe la Autoridad Certificadora (CA)
...
--------------------------------------------------------------------------------------

# habilito ssl
sudo a2enmod ssl

# habilito un nuevo Virtual Host
sudo a2ensite default-ssl.conf

# reinicio los servicios
sudo systemctl reload apache2
sudo systemctl restart apache2
#	> **********


#=========================================================================================================================
[üêßINSTALAR CERTIFICADO - certificado real emitido por CA (Certificate Authority)]::

# reciclando el c√≥digo anterior tengo los siguientes cambios
# 1. Clave privada (.key) ‚Üí igual
# 2. CSR (.csr) ‚Üí igual [Rellena CN con tu dominio real]
# 3. No generar el certificado autofirmado ‚Üí Elimina este paso: [openssl x509 -req -days 365 -in pruebas.local.csr -signkey pruebas.local.key -out pruebas.local.crt]
# 4. Enviar CSR a la CA::
#		La CA te devuelve:
#		- pruebas.local.crt ‚Üí tu certificado
#		- ca-bundle.crt ‚Üí cadena de certificados (opcional)
#	 * Recuerda que en 'Common Name (CN)', hay que introducir el FQDN exacto del servidor web.
# 5. Actualizar Apache
# ----------------------------------------------------------------------
# SSLCertificateFile /etc/letsencrypt/pruebas.local/pruebas.local.crt
# SSLCertificateKeyFile /etc/letsencrypt/pruebas.local/pruebas.local.key
# SSLCertificateChainFile /etc/letsencrypt/pruebas.local/ca-bundle.crt  	# si la CA entrega cadena
# ----------------------------------------------------------------------
# 6. Reiniciar Apache
