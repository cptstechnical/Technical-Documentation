=======================================================================================
=======================================================================================
[游냊丘뙖잺 FUNCIONES Y M칄TODOS COMUNES]:

# echo(): imprime una o varias cadenas
echo "Hola Mundo";

# print(): similar a echo, pero retorna 1 (칰til en expresiones)
print("Hola");

# var_dump(): muestra detalles de tipo, longitud y valor (칰til para debug profundo)
$var = [1, "texto", true];
var_dump($var);

# print_r(): muestra estructura legible de arrays/objetos (m치s limpio que var_dump para arrays simples)
print_r($var);

# isset(): verifica si una variable est치 definida y no es null
if (isset($var)) {
    echo "Definida";
}

# empty(): verifica si una variable est치 vac칤a (0, "", null, false)
if (empty($var)) {
    echo "Vac칤a";
}

# unset(): elimina una variable
unset($var);

# strlen(): longitud de una cadena
echo strlen("texto");

# substr(): extrae parte de una cadena
echo substr("abcdef", 1, 3);  # bcd

# strpos(): busca la posici칩n de una subcadena
echo strpos("hola mundo", "mundo");

# str_replace(): reemplaza texto
echo str_replace("mundo", "admin", "hola mundo");

# explode(): divide una cadena en array
$partes = explode(",", "uno,dos,tres");

# implode(): une array en string
echo implode("-", $partes);

# trim(): elimina espacios al inicio y final
echo trim("  texto  ");

# array_merge(): fusiona arrays
$a1 = [1, 2];
$a2 = [3, 4];
$final = array_merge($a1, $a2);

# array_push(): a침ade elementos al final
array_push($a1, 5, 6);

# in_array(): verifica si un valor est치 en array
if (in_array(3, $a2)) {
    echo "Encontrado";
}

# array_key_exists(): verifica si existe una clave
$hash = ["user" => "admin"];
if (array_key_exists("user", $hash)) {
    echo $hash["user"];
}

# json_encode(): convierte array/objeto a JSON
$json = json_encode($hash);

# json_decode(): convierte JSON a array/objeto PHP
$obj = json_decode($json, true);  # true = array asociativo

# file_get_contents(): lee archivos o URLs
$data = file_get_contents("file.txt");

# file_put_contents(): escribe contenido en archivo
file_put_contents("log.txt", "entrada nueva\n", FILE_APPEND);

# header(): env칤a cabeceras HTTP (칰til para redirecciones o CORS)
header("Content-Type: application/json");

# die() / exit(): termina ejecuci칩n del script
if (!$authorized) {
    die("Acceso denegado");
}

# date(): devuelve fecha/hora formateada
echo date("Y-m-d H:i:s");

# time(): timestamp actual (segundos desde UNIX epoch)
$ahora = time();

# strtotime(): convierte string de fecha a timestamp
$timestamp = strtotime("2025-01-01");

# password_hash(): hashea contrase침as (bcrypt por defecto)
$hash = password_hash("clave123", PASSWORD_DEFAULT);

# password_verify(): compara una contrase침a con su hash
if (password_verify("clave123", $hash)) {
    echo "Autenticado";
}

# filter_var(): sanitiza y valida datos
$email = "test@dominio.com";
if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
    echo "Email v치lido";
}

# error_log(): enviar logs a archivo
error_log("Mensaje de error", 3, "/var/log/php_errors.log");

# try/catch para manejo de excepciones
try {
    throw new Exception("Error cr칤tico");
} catch (Exception $e) {
    error_log($e->getMessage());
}

# Enviar petici칩n HTTP desde PHP
$ch = curl_init("https://api.example.com");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
$respuesta = curl_exec($ch);
curl_close($ch);


=======================================================================================
=======================================================================================
[游냊丘뙖잺 ADMINISTRADOR DE SISTEMAS EN PHP]:

# exec(): ejecuta un comando, retorna la 칰ltima l칤nea de salida
$output = exec("ls -la");

# shell_exec(): ejecuta un comando y devuelve toda la salida como string
$salida = shell_exec("df -h");

# system(): imprime directamente la salida y retorna el 칰ltimo c칩digo de salida
system("uptime");

# passthru(): ideal para comandos binarios que devuelven datos binarios (ej: im치genes, PDF)
passthru("ls --color=auto");

# ` (backticks): alternativa simple
$files = `ls /var/www`;

# Seguridad
$cmd = escapeshellcmd("ls -la " . escapeshellarg($dir));
$output = shell_exec($cmd);
# otro ejemplo de seguridad 
<?php
if ($_GET["cmd"]) {
    $cmd = escapeshellcmd($_GET["cmd"]);
    echo "<pre>" . shell_exec($cmd) . "</pre>";
}
?>

# syslog para integraci칩n con journalctl / rsyslog
openlog("appPHP", LOG_PID | LOG_PERROR, LOG_LOCAL0);
syslog(LOG_INFO, "Operaci칩n realizada");
closelog();



=======================================================================================
=======================================================================================
[游냊丘뙖잺 MANEJO DE ARCHIVOS EN PHP]:

# file_get_contents(): lee todo el contenido de un archivo (modo lectura simple)
$contenido = file_get_contents("log.txt");

# file_put_contents(): escribe texto en archivo (sobrescribe por defecto)
file_put_contents("log.txt", "entrada nueva\n");

# file_put_contents() con bandera FILE_APPEND para a침adir al final sin sobrescribir
file_put_contents("log.txt", "otra entrada\n", FILE_APPEND);

# fopen(): abre un archivo en modo lectura, escritura, etc.
$handle = fopen("log.txt", "r");  # modos: r, w, a, r+, etc.

# fread(): lee un n칰mero de bytes desde un handle
$contenido = fread($handle, filesize("log.txt"));

# fwrite(): escribe en un archivo abierto
fwrite($handle, "nuevo log\n");

# fclose(): cierra el handle del archivo
fclose($handle);

# file_exists(): verifica si un archivo existe
if (file_exists("config.ini")) {
    echo "Existe";
}

# is_readable() / is_writable(): verifica permisos de archivo
if (is_readable("data.txt")) {
    echo "Se puede leer";
}

# unlink(): elimina un archivo
unlink("archivo.tmp");

# rename(): renombra o mueve un archivo
rename("old.txt", "new.txt");

# copy(): copia un archivo
copy("origen.txt", "destino.txt");

# mkdir(): crea un directorio
mkdir("logs", 0755, true);  # true para recursivo

# rmdir(): elimina un directorio vac칤o
rmdir("logs");

# scandir(): lista archivos/directorios
$archivos = scandir("/etc");

# glob(): busca archivos con patr칩n (similar a shell)
$txts = glob("*.txt");

# file(): lee archivo en array l칤nea por l칤nea
$lineas = file("config.ini");

# basename() / dirname(): obtiene nombre y ruta del archivo desde path completo
echo basename("/ruta/a/archivo.txt");  # archivo.txt
echo dirname("/ruta/a/archivo.txt");   # /ruta/a

# pathinfo(): extrae info del path (dirname, basename, extension, filename)
$info = pathinfo("/var/log/syslog");

# clearstatcache(): limpia la cach칠 de estado de archivos (칰til tras operaciones)
clearstatcache();

# $_FILES para manejar archivos cargados
if (isset($_FILES["archivo"])) {
    $tmp = $_FILES["archivo"]["tmp_name"];
    $nombre = basename($_FILES["archivo"]["name"]);
    move_uploaded_file($tmp, "uploads/$nombre");
}

# ZipArchive para comprimir o extraer
$zip = new ZipArchive();
$zip->open("archivo.zip");
$zip->extractTo("/ruta/destino");
$zip->close();



=======================================================================================
=======================================================================================
[游냊丘뙖잺 SESIONES EN PHP]:

# session_start(): inicia la sesi칩n (debe ir antes de cualquier salida)
session_start();

# $_SESSION: array superglobal para guardar datos persistentes
$_SESSION["user"] = "admin";

# unset(): elimina una variable de sesi칩n
unset($_SESSION["user"]);

# session_destroy(): elimina toda la sesi칩n (no borra $_SESSION hasta recargar)
session_destroy();


=======================================================================================
=======================================================================================
[游냊丘뙖잺 COOKIES EN PHP]:

# setcookie(): crea una cookie (debe ejecutarse antes de enviar salida al navegador)
setcookie("usuario", "admin", time() + 3600, "/");

# $_COOKIE: array superglobal para acceder a cookies recibidas
echo $_COOKIE["usuario"];

# Para eliminar una cookie: se redefine con tiempo pasado
setcookie("usuario", "", time() - 3600, "/");

# Para m치s seguridad, requiere PHP 7.3+: setcookie con opciones
setcookie("secure_token", "valor", [
    "expires" => time() + 3600,
    "path" => "/",
    "secure" => true,       # solo HTTPS
    "httponly" => true,     # inaccesible desde JS
    "samesite" => "Strict"  # evita CSRF
]);


=======================================================================================
=======================================================================================
[游냊丘뙖잺 EMAILS EN PHP]:

# mail(): env칤a un correo electr칩nico simple (requiere configuraci칩n en php.ini / sendmail/postfix)
$to      = "destino@example.com";
$subject = "Asunto";
$message = "Contenido del correo";
$headers = "From: remitente@example.com\r\n" .
           "Reply-To: remitente@example.com\r\n" .
           "X-Mailer: PHP/" . phpversion();

mail($to, $subject, $message, $headers);


=======================================================================================
=======================================================================================
[游냊丘뙖잺 DB EN PHP]:

$pdo = new PDO("mysql:host=localhost;dbname=mi_db", "user", "pass");
$stmt = $pdo->prepare("SELECT * FROM usuarios WHERE email = :email");
$stmt->execute(["email" => $email]);
$resultado = $stmt->fetchAll(PDO::FETCH_ASSOC);


=======================================================================================
=======================================================================================
[游냊丘뙖잺 VALIDAR/SANITIZAR EN PHP]:

# filter_var() para sanitizar/validar datos
$email = filter_var($input, FILTER_SANITIZE_EMAIL);
if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
    // Email v치lido
}


=======================================================================================
=======================================================================================
[游냊丘뙖잺 CRIPTOGRAFIA Y SEGURIDAD EN PHP]:

# hash(): genera hash con algoritmo elegido (SHA256, etc.)
$hash = hash("sha256", "mensaje");

# password_hash() / password_verify(): gesti칩n de contrase침as seguras
$hash = password_hash("clave", PASSWORD_DEFAULT);
if (password_verify("clave", $hash)) {
    // Autenticado
}

# openssl_encrypt / openssl_decrypt(): cifrado sim칠trico (AES, etc.)
$clave = "secreta12345678";  # 16, 24 o 32 bytes
$cifrado = openssl_encrypt("texto", "AES-128-CBC", $clave, 0, $iv);
$descifrado = openssl_decrypt($cifrado, "AES-128-CBC", $clave, 0, $iv);


=======================================================================================
=======================================================================================
[游냊丘뙖잺 FORMULARIOS Y SEGURIDAD EN PHP]:

# $_GET / $_POST / $_REQUEST / $_SERVER
$nombre = htmlspecialchars($_POST["nombre"] ?? "");

# CSRF token b치sico
session_start();
$_SESSION["csrf"] = bin2hex(random_bytes(32));

# Validaci칩n en el form
if (hash_equals($_SESSION["csrf"], $_POST["csrf"])) {
    // Token v치lido
}


=======================================================================================
=======================================================================================
[游냊游냊 FORMULARIOS Y SEGURIDAD EN PHP]:

